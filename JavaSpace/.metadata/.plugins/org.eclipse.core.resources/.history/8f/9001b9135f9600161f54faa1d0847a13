package bg.elsys.ip.socket.echo;

import java.io.IOException;
import java.io.PrintStream;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Scanner;

public class EchoServer {
	
	public static final int PORT = 31110;

	public static void main(String[] args) throws IOException {
		/*
		 * Try with resources to open the socket and get the input and output
		 * streams of the socket.
		 */
		try (ServerSocket serverSocket = new ServerSocket(PORT);
				Socket clientSocket = serverSocket.accept();
				PrintStream out = new PrintStream(clientSocket.getOutputStream());
				Scanner in = new Scanner(clientSocket.getInputStream())) {
			String inputLine;
			Calendar calobj = Calendar.getInstance();
			/*
			 * While there is incoming content, we send it back as output.
			 */
			while ((inputLine = in.nextLine()) != null) {
				//out.println("Received: " + inputLine);
				switch(inputLine.toString()) {
				case "/date":
					DateFormat df = new SimpleDateFormat("dd/MM/yy");
					out.println(df.format(calobj.getTime()));
					break;
				case "/time":
					DateFormat hf = new SimpleDateFormat("HH:mm:ss");
					out.println(hf.format(calobj.getTime()));
					break;
				case "/myip":
					out.println(NetworkInterface.getNetworkInterfaces().toString());
					break;
				case "/help":
					out.println("/date, /time, /myip, /exit");
					break;
				case "/exit":
					out.println("Terminating Sockets...");
					clientSocket.close();
					serverSocket.close();
					break;
				}
			}
		}
	}
}
